{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyAppointment-master\\\\src\\\\screens\\\\AppointmentItemScreen.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppointmentHeader from \"../../components/AppointmentHeader\";\n\nvar AppointmentItemScreen = function AppointmentItemScreen(_ref) {\n  var navigation = _ref.navigation;\n  var keyValue = navigation.getParam(\"object\").key;\n  var img1 = null;\n  var img2 = null;\n  var checkInText = null;\n\n  if (keyValue == \"0\") {\n    img1 = React.createElement(Image, {\n      source: require(\"../../assets/img1_tick.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    });\n    img2 = React.createElement(Image, {\n      source: require(\"../../assets/img2_tick.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    });\n    checkInText = React.createElement(View, {\n      style: styles.checkInSuccessfullStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.checkInSuccessfullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"You are successfully checked In\"));\n  } else if (keyValue == \"1\") {\n    img2 = React.createElement(Image, {\n      source: require(\"../../assets/img1.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    });\n    img1 = React.createElement(Image, {\n      source: require(\"../../assets/img2.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    });\n    checkInText = React.createElement(View, {\n      style: styles.checkInUnsuccessfullStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.checkInUnsuccessfullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"You are not in range to be automatically checked In\"));\n  } else if (keyValue == \"2\") {\n    img1 = React.createElement(Image, {\n      source: require(\"../../assets/img1.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n    img2 = React.createElement(Image, {\n      source: require(\"../../assets/img2_tick.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n    checkInText = React.createElement(View, {\n      style: styles.checkInSuccessfullStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.checkInSuccessfullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"You are successfully checked In\"));\n  } else {\n    img2 = React.createElement(Image, {\n      source: require(\"../../assets/img1.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n    img1 = React.createElement(Image, {\n      source: require(\"../../assets/img2.png\"),\n      style: styles.imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    });\n    checkInText = React.createElement(View, {\n      style: styles.checkInSuccessfullStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.checkInSuccessfullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"You are successfully checked In\"));\n  }\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(AppointmentHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 40,\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.titleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, navigation.getParam(\"object\").appointmentTitle), React.createElement(Text, {\n    style: styles.descStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, navigation.getParam(\"object\").appointmentDesc)), React.createElement(View, {\n    style: styles.imgViewStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, img1, img2), checkInText);\n};\n\nvar styles = StyleSheet.create({\n  titleStyle: {\n    fontSize: 20,\n    width: \"60%\",\n    fontWeight: \"bold\"\n  },\n  descStyle: {\n    fontSize: 10,\n    width: \"60%\",\n    fontWeight: \"bold\",\n    color: \"grey\"\n  },\n  imgViewStyle: {\n    marginTop: 20,\n    height: 100,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    flexDirection: \"row\"\n  },\n  imgStyle: {\n    borderRadius: 100,\n    width: 80,\n    height: 80\n  },\n  checkInSuccessfullStyle: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"green\",\n    borderRadius: 100\n  },\n  checkInSuccessfullText: {\n    color: \"white\",\n    fontSize: 10,\n    padding: 5\n  },\n  checkInUnsuccessfullStyle: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"lightgrey\",\n    borderRadius: 100\n  },\n  checkInUnsuccessfullText: {\n    color: \"black\",\n    fontSize: 10,\n    padding: 5\n  }\n});\nexport default AppointmentItemScreen;","map":{"version":3,"sources":["D:/MyAppointment-master/src/screens/AppointmentItemScreen.js"],"names":["React","AppointmentHeader","AppointmentItemScreen","navigation","keyValue","getParam","key","img1","img2","checkInText","require","styles","imgStyle","checkInSuccessfullStyle","checkInSuccessfullText","checkInUnsuccessfullStyle","checkInUnsuccessfullText","marginTop","padding","titleStyle","appointmentTitle","descStyle","appointmentDesc","imgViewStyle","StyleSheet","create","fontSize","width","fontWeight","color","height","paddingHorizontal","alignItems","justifyContent","flexDirection","borderRadius","marginBottom","marginHorizontal","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, StyleSheet, View, Image, ScrollView } from \"react-native\";\nimport AppointmentHeader from \"../../components/AppointmentHeader\";\n\nconst AppointmentItemScreen = ({ navigation }) => {\n  const keyValue = navigation.getParam(\"object\").key;\n  var img1 = null;\n  var img2 = null;\n  var checkInText = null;\n  if (keyValue == \"0\") {\n    img1 = (\n      <Image\n        source={require(\"../../assets/img1_tick.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    img2 = (\n      <Image\n        source={require(\"../../assets/img2_tick.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    checkInText = (\n      <View style={styles.checkInSuccessfullStyle}>\n        <Text style={styles.checkInSuccessfullText}>\n          You are successfully checked In\n        </Text>\n      </View>\n    );\n  } else if (keyValue == \"1\") {\n    img2 = (\n      <Image\n        source={require(\"../../assets/img1.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    img1 = (\n      <Image\n        source={require(\"../../assets/img2.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    checkInText = (\n      <View style={styles.checkInUnsuccessfullStyle}>\n        <Text style={styles.checkInUnsuccessfullText}>\n          You are not in range to be automatically checked In\n        </Text>\n      </View>\n    );\n  } else if (keyValue == \"2\") {\n    img1 = (\n      <Image\n        source={require(\"../../assets/img1.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    img2 = (\n      <Image\n        source={require(\"../../assets/img2_tick.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    checkInText = (\n      <View style={styles.checkInSuccessfullStyle}>\n        <Text style={styles.checkInSuccessfullText}>\n          You are successfully checked In\n        </Text>\n      </View>\n    );\n  } else {\n    img2 = (\n      <Image\n        source={require(\"../../assets/img1.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    img1 = (\n      <Image\n        source={require(\"../../assets/img2.png\")}\n        style={styles.imgStyle}\n      />\n    );\n    checkInText = (\n      <View style={styles.checkInSuccessfullStyle}>\n        <Text style={styles.checkInSuccessfullText}>\n          You are successfully checked In\n        </Text>\n      </View>\n    );\n  }\n  return (\n    <ScrollView>\n      <AppointmentHeader />\n      <View style={{ marginTop: 40, padding: 20 }}>\n        <Text style={styles.titleStyle}>\n          {navigation.getParam(\"object\").appointmentTitle}\n        </Text>\n        <Text style={styles.descStyle}>\n          {navigation.getParam(\"object\").appointmentDesc}\n        </Text>\n      </View>\n      <View style={styles.imgViewStyle}>\n        {img1}\n        {img2}\n      </View>\n      {checkInText}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleStyle: {\n    fontSize: 20,\n    width: \"60%\",\n    fontWeight: \"bold\",\n  },\n  descStyle: {\n    fontSize: 10,\n    width: \"60%\",\n    fontWeight: \"bold\",\n    color: \"grey\",\n  },\n  imgViewStyle: {\n    marginTop: 20,\n    height: 100,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    flexDirection: \"row\",\n  },\n  imgStyle: {\n    borderRadius: 100,\n    width: 80,\n    height: 80,\n  },\n  checkInSuccessfullStyle: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"green\",\n    borderRadius: 100,\n  },\n  checkInSuccessfullText: {\n    color: \"white\",\n    fontSize: 10,\n    padding: 5,\n  },\n  checkInUnsuccessfullStyle: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"lightgrey\",\n    borderRadius: 100,\n  },\n  checkInUnsuccessfullText: {\n    color: \"black\",\n    fontSize: 10,\n    padding: 5,\n  },\n});\n\nexport default AppointmentItemScreen;\n"]},"metadata":{},"sourceType":"module"}