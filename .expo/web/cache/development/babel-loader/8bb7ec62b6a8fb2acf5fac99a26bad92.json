{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MyAppointment-master\\\\src\\\\screens\\\\Login.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport DatePicker from \"react-native-datepicker\";\nimport Top from \"../../components/Top\";\nimport InputField from \"../../components/InputField\";\nimport { fetchWrapper } from \"./../../services/restApi\";\nimport { persistState } from \"../../utils/persist\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstName = _React$useState2[0],\n      setFirstName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastName = _React$useState4[0],\n      setLastName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"03/07/1991\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dob = _React$useState8[0],\n      setDob = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      postCode = _React$useState10[0],\n      setPostCode = _React$useState10[1];\n\n  var _React$useState11 = React.useState(true),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isError = _React$useState12[0],\n      setIsError = _React$useState12[1];\n\n  var _React$useState13 = React.useState(null),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isErrorMessage = _React$useState14[0],\n      setIsErrorMessage = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      isLoading = _React$useState16[0],\n      setIsLoading = _React$useState16[1];\n\n  return React.createElement(KeyboardAvoidingView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 350\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \" Login to your Account.... \"), React.createElement(InputField, {\n    pholder: \"First Name\",\n    kbType: \"default\",\n    onChangeText: setFirstName,\n    value: firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(InputField, {\n    pholder: \"Last Name\",\n    kbType: \"default\",\n    onChangeText: setLastName,\n    value: lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(InputField, {\n    pholder: \"Email\",\n    kbType: \"default\",\n    onChangeText: setEmail,\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(DatePicker, {\n    style: {\n      width: \"80%\"\n    },\n    date: dob,\n    mode: \"date\",\n    placeholder: \"select date\",\n    format: \"DD/MM/YYYY\",\n    confirmBtnText: \"Confirm\",\n    cancelBtnText: \"Cancel\",\n    customStyles: {\n      dateIcon: {\n        position: \"absolute\",\n        left: 0,\n        top: 4,\n        marginLeft: 0\n      },\n      dateInput: {\n        marginLeft: 36\n      }\n    },\n    onDateChange: function onDateChange(date) {\n      setDob(date);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(InputField, {\n    pholder: \"post Code\",\n    kbType: \"default\",\n    onChangeText: setPostCode,\n    value: postCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), isErrorMessage && !isLoading && React.createElement(Text, {\n    style: styles.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, isErrorMessage), isLoading && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }\n  }, \"Loading....\"), React.createElement(TouchableOpacity, {\n    onPress: function _callee() {\n      var isUserLogin, practices;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetchWrapper(\"POST\", \"https://uat.remoteforms.co.uk/api/members/authenticate\", {\n                MemberType: \"PATIENT\",\n                Member: {\n                  FirstName: firstName,\n                  LastName: lastName,\n                  Email: email,\n                  DateOfBirth: dob,\n                  Address: {\n                    PostCode: postCode\n                  }\n                }\n              }, {\n                \"x-api-key\": \"8967305C-13F4-4A15-A84B-358E3F85C010\"\n              }));\n\n            case 3:\n              isUserLogin = _context.sent;\n              setIsLoading(false);\n\n              if (isUserLogin == null ? void 0 : isUserLogin.Address) {\n                practices = isUserLogin.Practices[0];\n                persistState(\"code\", practices.PatientCode);\n                setIsError(true);\n                setIsErrorMessage(null);\n                navigation.navigate(\"Home\");\n              } else {\n                setIsErrorMessage(isUserLogin);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    style: styles.loginButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \" Sign In \")), React.createElement(Text, {\n    style: styles.bottomText,\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Click here\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    margin: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  heading: {\n    margin: 10,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  loginButtonContainer: {\n    margin: 20,\n    elevation: 8,\n    backgroundColor: \"#308DFF\",\n    width: \"80%\",\n    height: 50,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  },\n  loginButtonText: {\n    fontSize: 15,\n    color: \"#FFFFFF\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  bottomText: {\n    margin: 20,\n    fontSize: 10,\n    fontWeight: \"bold\",\n    color: \"#308DFF\"\n  },\n  errorMessage: {\n    color: \"red\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/MyAppointment-master/src/screens/Login.js"],"names":["React","DatePicker","Top","InputField","fetchWrapper","persistState","Login","navigation","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","dob","setDob","postCode","setPostCode","isError","setIsError","isErrorMessage","setIsErrorMessage","isLoading","setIsLoading","marginBottom","styles","container","heading","width","dateIcon","position","left","top","marginLeft","dateInput","date","errorMessage","MemberType","Member","FirstName","LastName","Email","DateOfBirth","Address","PostCode","isUserLogin","practices","Practices","PatientCode","navigate","loginButtonContainer","loginButtonText","bottomText","StyleSheet","create","margin","alignItems","justifyContent","fontSize","fontWeight","color","elevation","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","alignSelf","textTransform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  ScrollView,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport DatePicker from \"react-native-datepicker\";\nimport Top from \"../../components/Top\";\nimport InputField from \"../../components/InputField\";\nimport { fetchWrapper } from \"./../../services/restApi\";\nimport { persistState } from \"../../utils/persist\";\n\nconst Login = ({ navigation }) => {\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDob] = React.useState(\"03/07/1991\");\n  const [postCode, setPostCode] = React.useState(\"\");\n  const [isError, setIsError] = React.useState(true);\n  const [isErrorMessage, setIsErrorMessage] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  return (\n    <KeyboardAvoidingView>\n      <ScrollView>\n        <View style={{ marginBottom: 350 }}>\n          <Top />\n\n          <View style={styles.container}>\n            <Text style={styles.heading}> Login to your Account.... </Text>\n            <InputField\n              pholder=\"First Name\"\n              kbType=\"default\"\n              onChangeText={setFirstName}\n              value={firstName}\n            />\n            <InputField\n              pholder=\"Last Name\"\n              kbType=\"default\"\n              onChangeText={setLastName}\n              value={lastName}\n            />\n            <InputField\n              pholder=\"Email\"\n              kbType=\"default\"\n              onChangeText={setEmail}\n              value={email}\n            />\n            <DatePicker\n              style={{ width: \"80%\" }}\n              date={dob}\n              mode=\"date\"\n              placeholder=\"select date\"\n              format=\"DD/MM/YYYY\"\n              confirmBtnText=\"Confirm\"\n              cancelBtnText=\"Cancel\"\n              customStyles={{\n                dateIcon: {\n                  position: \"absolute\",\n                  left: 0,\n                  top: 4,\n                  marginLeft: 0,\n                },\n                dateInput: {\n                  marginLeft: 36,\n                },\n              }}\n              onDateChange={(date) => {\n                setDob(date);\n              }}\n            />\n            <InputField\n              pholder=\"post Code\"\n              kbType=\"default\"\n              onChangeText={setPostCode}\n              value={postCode}\n            />\n            {isErrorMessage && !isLoading && (\n              <Text style={styles.errorMessage}>{isErrorMessage}</Text>\n            )}\n\n            {isLoading && <Text>Loading....</Text>}\n\n            <TouchableOpacity\n              onPress={async () => {\n                setIsLoading(true);\n\n                const isUserLogin = await fetchWrapper(\n                  \"POST\",\n                  \"https://uat.remoteforms.co.uk/api/members/authenticate\",\n                  {\n                    MemberType: \"PATIENT\",\n                    Member: {\n                      FirstName: firstName,\n                      LastName: lastName,\n                      Email: email,\n                      DateOfBirth: dob,\n                      Address: {\n                        PostCode: postCode,\n                      },\n                    },\n                  },\n                  { \"x-api-key\": \"8967305C-13F4-4A15-A84B-358E3F85C010\" }\n                );\n\n                setIsLoading(false);\n\n                if (isUserLogin?.Address) {\n                  const practices = isUserLogin.Practices[0];\n\n                  persistState(\"code\", practices.PatientCode);\n                  setIsError(true);\n                  setIsErrorMessage(null);\n                  navigation.navigate(\"Home\");\n                } else {\n                  setIsErrorMessage(isUserLogin);\n                }\n              }}\n              style={styles.loginButtonContainer}\n            >\n              <Text style={styles.loginButtonText}> Sign In </Text>\n            </TouchableOpacity>\n            <Text\n              style={styles.bottomText}\n              onPress={() => navigation.navigate(\"SignUp\")}\n            >\n              Don't have an account? Click here\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  heading: {\n    margin: 10,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"black\",\n  },\n  loginButtonContainer: {\n    margin: 20,\n    elevation: 8,\n    backgroundColor: \"#308DFF\",\n    width: \"80%\",\n    height: 50,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n  },\n  loginButtonText: {\n    fontSize: 15,\n    color: \"#FFFFFF\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\",\n  },\n  bottomText: {\n    margin: 20,\n    fontSize: 10,\n    fontWeight: \"bold\",\n    color: \"#308DFF\",\n  },\n  errorMessage: { color: \"red\" },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}